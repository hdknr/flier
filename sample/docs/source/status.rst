============
開発状況
============


アカウントシステム
====================

- :doc:`accounts/accounts`

.. list-table:: 

    *   - ログインユーザーの移行
        - XoopsUsersの移行スクリプト作成済み
        - XoopsUsers.emailに不正なアドレスが
          入っているケースがある

    *   - 認証システム(XoopsUsers)
        - XoopsUsersのuname + passでの認証可能。
          XoopsUsersで認証が通ったらそのパスワードを新システムの
          User.passwordにプログラムで設定する。
        - XoopsUsers.passはハッシュパスワードなので
          単純移行ができないので。

    *   - 認証システム(User)
        - XoopsUsersで認証すみのユーザーはUserでも認証可能。
        - 

    *   - アカウント有効化(プロビジョニング)
        - 未実装。方式確認。
        - Web名簿更新で新規追加したユーザーに関して、
          初期設定パスワードを生年月日に指定するので、
          User認証でログインは可能。
          アカウント有効化の際にパスワードの再設定を強制させるか？

   
Web名簿システム
====================

- :doc:`alumni/alumni`

.. list-table:: 

    *   - データ移行
        - 移行スクリプトを作成済み。
        - 事務局検索名簿(UserInfo2->AlumnusMaster)と
          一般検索(UserInfo->AlumnusPublic)のの移行。
       
    *   - 部分公開のデータ管理方式の変更
        - AlumnusMasterからは"*"(アスタリスク)を除く。
          対応するAlumnusPublicのフィールドがアスタリスクの場合、
          限定公開、という判定に変更する。
        - 先頭にアスタリスクが入っていると処理、管理がしづらい。

    *   - 履歴テーブルの新設
        - AlumnusHistoryテーブルを用意して、一括更新(インポート処理)の
          際にアップロードしたデータと削除予定のデータをAlumnusHistoryに保存する。
        - アップロードの処理を変更している。

    *   - アップロード時にデータ名称を指定するようにする
        - 履歴テーブル(AlumnusHistory)に名称つきでバックアップするので、
          あとでいつのアップロードのバックアップかを管理できるようにする。
          不要なバックアップを削除できるようにも可能。
        - 指定がなかったら日付で自動設定にする。

    *   - アップロード形式はこれまでと同様にCSVとする
        - Excelだとデータが大きすぎて処理できない。
        - 

    *   - 新規アカウント、削除アカウントのプロビジョニング
        - 未実装。 方式確認。
        - 新規作成はすぐに対応可能。削除の場合、 名簿データは削除しても
          アカウントデータは削除しないで無効にしておいたほうが良いと思われる。
        　

生涯メール
===============

- :doc:`accounts/ltma`

.. list-table:: 

    *   - データ移行
        - データ移行スクリプト作成すみ
        - 

    *   - メール転送。
        - 未実装
        - 概要設計はできているが、テスト実装で設計の妥当性を確認する必要あり。

    *   - 生涯メール管理
        - 未実装。
        - 新規作成。無効化の処理を実装する必要あり。


支援システム
====================

- :doc:`communities/communities`

.. list-table::
    
    *   - データ移行
        - スケジュール、 活動予定、活動報告、写真に関して
          移行スクリプト作成すみ。
        - 旧システムのバグ(か仕様)ですでに存在しないコミュニティの写真が残ったまま
          で一部移行できないデータがある。

    *   - メンバー管理
        - テスト実装中
        - 

    *   - 公開権限処理
        - 設計中
        -  

    *   - 役職管理
        - 設計中
        - 「役職がある」、と「役職がない」の２段階権限でよいか。

    *   - 一括登録
        - テスト実装中。
        - 本人キーの確認。

    *   - 如水会員メンバーに対する課金管理
        - データモデル実装中
        - タスクのフローを詰める必要がある。

    *   - メンバーメール送信
        - 方式検討中
        -  

    *   - 役職者あて事務局メール送信
        - 方式検討中
        -  

イベント管理
====================

- :doc:`events/events`

.. list-table::

    *   - プロトタイプ実装
        - 実装済み
        - 詳細要件を確定して再設計と実装。


問い合わせ管理
====================

- :doc:`supports/supports`
   
.. list-table::

    *   - イベント参加
        - 設計中
        - 如水会メンバー(ログイン) / ゲストの２種類ある

    *   - 一般問い合わせ
        - 設計中
        - 如水会メンバー(ログイン) / ゲストの２種類ある

一橋クラブ予約
====================

- :doc:`club/club`

.. list-table::

    *   - スケジュール登録管理
        - 要件定義中
        - 

    *   - 予約管理
        - 要件定義中
        - 

会報システム
================

- :doc:`bulletins/bulletins`

.. list-table::

    *   - システム移行
        - 稼働確認済み
        - 

    *   - 留学生レポートなど対応
        - 要件定義中
        - 

TODO
=====

.. todolist::
